.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "lemonbar 1"
.TH lemonbar 1 "2023-07-25" "lemonbar 0042efd" "lemonbar Manual"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
lemonbar \- Featherweight lemon\-scented bar
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fIlemonbar\fR [\-h | \-g \fIwidth\fR\fBx\fR\fIheight\fR\fB+\fR\fIx\fR\fB+\fR\fIy\fR | \-b | \-d | \-f \fIfont\fR | \-p | \-n \fIname\fR | \-u \fIpixel\fR | \-B \fIcolor\fR | \-F \fIcolor\fR | \-U \fIcolor\fR | \-o \fIoffset\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBlemonbar\fR (formerly known as \fBbar\fR) is a lightweight bar entirely based on \s-1XCB.\s0 Provides full \s-1UTF\-8\s0 support, basic formatting, RandR and Xinerama support and \s-1EWMH\s0 compliance without wasting your precious memory.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-h\fR" 4
.IX Item "-h"
Display the help and exit.
.IP "\fB\-g\fR \fIwidth\fR\fBx\fR\fIheight\fR\fB+\fR\fIx\fR\fB+\fR\fIy\fR" 4
.IX Item "-g widthxheight+x+y"
Set the window geometry. If a parameter is omitted it's filled with the default value. If the \fIy\fR parameter is specified along with the \fB\-b\fR switch then the position is relative to the bottom of the screen.
.IP "\fB\-b\fR" 4
.IX Item "-b"
Dock the bar at the bottom of the screen.
.IP "\fB\-d\fR" 4
.IX Item "-d"
Force docking without asking the window manager. This is needed if the window manager isn't \s-1EWMH\s0 compliant.
.IP "\fB\-f\fR \fIfont\fR" 4
.IX Item "-f font"
Define the font to load into one of the five slots (the number of slots is hardcoded and can be tweaked by
changing the \s-1MAX_FONT_COUNT\s0 parameter in the source code). This version supports fontconfig font specifiers and anti-aliased fonts.
.IP "\fB\-a\fR \fInumber\fR" 4
.IX Item "-a number"
Set number of clickable areas (default is 10)
.IP "\fB\-p\fR" 4
.IX Item "-p"
Make the bar permanent, don't exit after the standard input is closed.
.IP "\fB\-n\fR \fIname\fR" 4
.IX Item "-n name"
Set the \s-1WM_NAME\s0 atom value for the bar.
.IP "\fB\-u\fR \fIpixel\fR" 4
.IX Item "-u pixel"
Sets the underline width in pixels. The default is 1.
.IP "\fB\-B\fR \fIcolor\fR" 4
.IX Item "-B color"
Set the background color of the bar. \fIcolor\fR must be specified in the hex format (#aarrggbb, #rrggbb, #rgb). If no compositor such as compton or xcompmgr is running the alpha channel is silently ignored.
.IP "\fB\-F\fR \fIcolor\fR" 4
.IX Item "-F color"
Set the foreground color of the bar. Accepts the same color formats as \fB\-B\fR.
.IP "\fB\-o\fR \fIoffset\fR" 4
.IX Item "-o offset"
Add a vertical offset to the text. \fIoffset\fR must be a number and can be negative. \fI\-o \-3\fR will push the text 3 pixels up.
.IP "\fB\-U\fR \fIcolor\fR" 4
.IX Item "-U color"
Set the underline color of the bar. Accepts the same color formats as \fB\-B\fR.
.SH "FORMATTING"
.IX Header "FORMATTING"
lemonbar provides a screenrc-inspired formatting syntax to allow full customization at runtime. Every formatting block is opened with \f(CW\*(C`%{\*(C'\fR and closed by \f(CW\*(C`}\*(C'\fR and accepts the following commands, the parser tries its best to handle malformed input. Use \f(CW\*(C`%%\*(C'\fR to get a literal percent sign (\f(CW\*(C`%\*(C'\fR).
.IP "\fBR\fR" 4
.IX Item "R"
Swap the current background and foreground colors.
.IP "\fBl\fR" 4
.IX Item "l"
Aligns the following text to the left side of the screen.
.IP "\fBc\fR" 4
.IX Item "c"
Aligns the following text to the center of the screen.
.IP "\fBr\fR" 4
.IX Item "r"
Aligns the following text to the right side of the screen.
.IP "\fBO\fR\fIwidth\fR" 4
.IX Item "Owidth"
Offset the current position by \fIwidth\fR pixels in the alignment direction.
.IP "\fBB\fR\fIcolor\fR" 4
.IX Item "Bcolor"
Set the text background color. The parameter \fIcolor\fR can be \fI\-\fR or a color in one of the formats mentioned before. The special value \fI\-\fR resets the color to the default one.
.IP "\fBF\fR\fIcolor\fR" 4
.IX Item "Fcolor"
Set the text foreground color. The parameter \fIcolor\fR can be \fI\-\fR or a color in one of the formats mentioned before. The special value \fI\-\fR resets the color to the default one.
.IP "\fBT\fR\fIindex\fR" 4
.IX Item "Tindex"
Set the font used to draw the following text. The parameter \fIindex\fR can either be \fI\-\fR or the 1\-based index of the slot which contains the desired font. If the parameter is \fI\-\fR lemonbar resets to the normal behavior (matching the first font that can be used for the character). If the selected font can't be used to draw a character, lemonbar will fall back to normal behavior for that character
.IP "\fBU\fR\fIcolor\fR" 4
.IX Item "Ucolor"
Set the text underline color. The parameter \fIcolor\fR can be \fI\-\fR or a color in one of the formats mentioned before. The special value \fI\-\fR resets the color to the default one.
.IP "\fBA\fR\fIbutton\fR:\fIcommand\fR:" 4
.IX Item "Abutton:command:"
Create a clickable area starting from the current position, when the area is clicked \fIcommand\fR is printed on stdout. The area is closed when a \fBA\fR token, not followed by : is encountered.
.Sp
Eg. \fI%{A:reboot:} Click here to reboot %{A}\fR
.Sp
The \fIbutton\fR field is optional, it defaults to the left button, and it's a number ranging from 1 to 5 which maps to the left, middle, right, scroll up and scroll down movements. Your mileage may vary.
.Sp
Nested clickable areas can trigger different commands.
.Sp
Eg. \fI%{A:reboot:}%{A3:halt:} Left click to reboot, right click to shutdown %{A}%{A}\fR
.IP "\fBS\fR\fIdir\fR" 4
.IX Item "Sdir"
Change the monitor the bar is rendered to. \fIdir\fR can be either
.RS 4
.IP "\fB+\fR/\fB\-\fR" 4
.IX Item "+/-"
Next/previous monitor.
.IP "\fBf\fR/\fBl\fR" 4
.IX Item "f/l"
First/last monitor.
.IP "\fI0\-9\fR" 4
.IX Item "0-9"
Nth monitor.
.RE
.RS 4
.RE
.PP
\&\fBAttribute modifiers\fR
.IP "\fB+\fR\fIattribute\fR" 4
.IX Item "+attribute"
Set the attribute \fIattribute\fR for the following text.
.IP "\fB\-\fR\fIattribute\fR" 4
.IX Item "-attribute"
Unset the attribute \fIattribute\fR for the following text.
.IP "\fB!\fR\fIattribute\fR" 4
.IX Item "!attribute"
Toggle the attribute \fIattribute\fR for the following text.
.PP
Where \fIattribute\fR is one of the following
.IP "\fBo\fR" 4
.IX Item "o"
Draw a line over the text.
.IP "\fBu\fR" 4
.IX Item "u"
Draw a line under the text.
.SH "OUTPUT"
.IX Header "OUTPUT"
Clicking on an area makes lemonbar output the command to stdout, followed by a newline, allowing the user to pipe it into a script, execute it or simply ignore it. Simple and powerful, that's it.
.SH "WWW"
.IX Header "WWW"
git repository <https://github.com/LemonBoy/bar>
.SH "AUTHOR"
.IX Header "AUTHOR"
2012\-2017 (C) The Lemon Man
.PP
Xinerama support was kindly contributed by Stebalien
.PP
RandR support was kindly contributed by jvvv
.PP
Clickable areas support was heavily based off u\-ra contribution
